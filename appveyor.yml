# environment variables
#environment:
  #node_pre_gyp_secretAccessKey:
  #secure: wJRlPhmqDgwxllTxhhG5JJosBf3nKYxcXO6NfGnrUUnxmECHeNTsBrldqW8+EjyK
  #node_pre_gyp_accessKeyId:
  #secure: cgGBaLa6xiPo5duak1/xU5hxPCn1aUQqkQQZf27QQp0=

# try on unstable version of the server to build node-opencv
os: unstable

# to add several platforms to build matrix:
platform:
  #- x86
  - x64

install:
  - cmd: ECHO "INSTALL OPENCV:"
  - cmd: choco install OpenCV
  - cmd: ECHO "APPVEYOR_REPO_COMMIT_MESSAGE ->"
  - cmd: ECHO %APPVEYOR_REPO_COMMIT_MESSAGE%
  - cmd: SET COMMIT_MSG="%APPVEYOR_REPO_COMMIT_MESSAGE%"
  - cmd: SET PUBLISH_BINARY=false
  # Check to verify the branch is the same than latest tag, if so
  # then we publish the binaries if everything else is successful.
  - cmd: git describe --tags --always HEAD > _git_tag.tmp
  - cmd: SET /p GIT_TAG=<_git_tag.tmp
  - cmd: ECHO "LATEST LOCAL TAG:"
  - cmd: ECHO %GIT_TAG%
  - cmd: ECHO "APPVEYOR REPO BRANCH/TAG:"
  - cmd: ECHO %APPVEYOR_REPO_BRANCH%
  - cmd: DEL _git_tag.tmp
  - cmd: IF x%APPVEYOR_REPO_BRANCH%==x%GIT_TAG% SET PUBLISH_BINARY=true
  # Or look for commit message containing `[publish binary]`
  - cmd: IF not x%COMMIT_MSG:[publish binary]=%==x%COMMIT_MSG% SET PUBLISH_BINARY=true
  - cmd: ECHO "Env Var PUBLISH_BINARY:"
  - cmd: ECHO %PUBLISH_BINARY%
  - cmd: git clone https://github.com/marcelklehr/nodist.git c:\nodist 2>&1
  - cmd: SET PATH=C:\nodist\bin;%PATH%
  - cmd: SET NODIST_PREFIX=C:\nodist
  - cmd: IF %PROCESSOR_ARCHITECTURE%==x86 (SET NODIST_X64=0) ELSE (SET NODIST_X64=1)
  - cmd: call nodist update
  - cmd: call nodist stable
  #- cmd: npm install -g node-gyp
  #- cmd: npm install node-pre-gyp
  #- cmd: npm install aws-sdk
  - cmd: SET PATH=%cd%\node_modules\.bin\;C:\MinGW\bin;C:\GTK\bin;C:\msys\1.0\bin;%PATH%
  - cmd: SET PATH=C:\OpenCV\opencv\buil;%PATH%
  - cmd: SET PKG_CONFIG_PATH=C:\GTK\lib\pkgconfig
  - cmd: dir C:\GTK\lib\pkgconfig
  # Here we need to copy the opencv.pc file from the repo into PKG_CONFIG_PATH
  # trick part is to check for the vc12 folder and use that one
  - cmd: copy .\utils\opencv_x64.pc C:\GTK\lib\pkgconfig



# to run your custom scripts instead of automatic MSBuild
build_script:
  - cmd: ECHO "BUILDING binary package:"
  - cmd: npm install --build-from-source
  - cmd: npm test
  - cmd: node lib/opencv.js
  - cmd: ECHO "PUBLISH binary package:"
  #- cmd: IF %PUBLISH_BINARY%==true (node-pre-gyp package publish 2>&1)
  #- cmd: node-pre-gyp clean
  #- cmd: node-gyp clean
  #- cmd: rmdir /q /s node_modules

on_success:
  # test installing from binary package works
  - cmd: ECHO "ON SUCCESS:"
  - cmd: ECHO "Try installing from binary:"
  #- cmd: IF %PUBLISH_BINARY%==true npm install --fallback-to-build=false
  # Print Available Binaries
  #- cmd: node-pre-gyp info

test: OFF

deploy: OFF
